{"ast":null,"code":"import { DELETE_BLOGS, GET_BLOGS, ADD_BLOGS, UPDATE_BLOGS } from \"../actions/types\";\n\n// Redux State\nconst initialState = {\n  blogs: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BLOGS:\n      return {\n        ...state,\n        blogs: action.payload // filling up state with api data\n      };\n    case DELETE_BLOGS:\n      return {\n        ...state,\n        blogs: state.blogs.filter(blog => blog.id !== action.payload)\n        // only those id's will be displayed on webpage which is not equal to the id\n        // present in the payload.\n      };\n    case ADD_BLOGS:\n      return {\n        ...state,\n        blogs: [...state.blogs, action.payload]\n      };\n    case UPDATE_BLOGS:\n      const updates = state.blogs.map(blog => {\n        if (blog.id === action.payload.id) {\n          return {\n            ...blog,\n            ...action.payload\n          };\n        }\n        return blog;\n      });\n      return {\n        ...state,\n        blogs: updates\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["DELETE_BLOGS","GET_BLOGS","ADD_BLOGS","UPDATE_BLOGS","initialState","blogs","state","action","type","payload","filter","blog","id","updates","map"],"sources":["C:/Users/safiu/Downloads/FullStack_Blog_App_with_React_Redux_and_Django-master/blog/frontend/src/reducers/blogs.js"],"sourcesContent":["import {\n  DELETE_BLOGS,\n  GET_BLOGS,\n  ADD_BLOGS,\n  UPDATE_BLOGS,\n} from \"../actions/types\";\n\n// Redux State\nconst initialState = {\n  blogs: [],\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BLOGS:\n      return {\n        ...state,\n        blogs: action.payload, // filling up state with api data\n      };\n    case DELETE_BLOGS:\n      return {\n        ...state,\n        blogs: state.blogs.filter((blog) => blog.id !== action.payload),\n        // only those id's will be displayed on webpage which is not equal to the id\n        // present in the payload.\n      };\n    case ADD_BLOGS:\n      return {\n        ...state,\n        blogs: [...state.blogs, action.payload],\n      };\n    case UPDATE_BLOGS:\n      const updates = state.blogs.map((blog) => {\n        if (blog.id === action.payload.id) {\n          return { ...blog, ...action.payload };\n        }\n        return blog;\n      });\n      return {\n        ...state,\n        blogs: updates,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA,SACEA,YAAY,EACZC,SAAS,EACTC,SAAS,EACTC,YAAY,QACP,kBAAkB;;AAEzB;AACA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,eAAe,UAAUC,KAAK,GAAGF,YAAY,EAAEG,MAAM,EAAE;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,SAAS;MACZ,OAAO;QACL,GAAGK,KAAK;QACRD,KAAK,EAAEE,MAAM,CAACE,OAAO,CAAE;MACzB,CAAC;IACH,KAAKT,YAAY;MACf,OAAO;QACL,GAAGM,KAAK;QACRD,KAAK,EAAEC,KAAK,CAACD,KAAK,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO;QAC9D;QACA;MACF,CAAC;IACH,KAAKP,SAAS;MACZ,OAAO;QACL,GAAGI,KAAK;QACRD,KAAK,EAAE,CAAC,GAAGC,KAAK,CAACD,KAAK,EAAEE,MAAM,CAACE,OAAO;MACxC,CAAC;IACH,KAAKN,YAAY;MACf,MAAMU,OAAO,GAAGP,KAAK,CAACD,KAAK,CAACS,GAAG,CAAEH,IAAI,IAAK;QACxC,IAAIA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACE,OAAO,CAACG,EAAE,EAAE;UACjC,OAAO;YAAE,GAAGD,IAAI;YAAE,GAAGJ,MAAM,CAACE;UAAQ,CAAC;QACvC;QACA,OAAOE,IAAI;MACb,CAAC,CAAC;MACF,OAAO;QACL,GAAGL,KAAK;QACRD,KAAK,EAAEQ;MACT,CAAC;IACH;MACE,OAAOP,KAAK;EAChB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}