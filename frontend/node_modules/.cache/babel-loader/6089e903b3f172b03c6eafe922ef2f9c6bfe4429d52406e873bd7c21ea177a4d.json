{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\safiu\\\\Downloads\\\\FullStack_Blog_App_with_React_Redux_and_Django-master\\\\blog\\\\frontend\\\\src\\\\components\\\\common\\\\PrivateRoute.js\";\n// Manages --> Will Redirect the user back to login page if not already logged in.\n\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n// Applying Private Route check on our components\n// here component will manage our two components of App.js (Blogs and Forms) followed by auth\n// rest props (remaining properties)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  component: Component,\n  auth,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, {\n  ...rest,\n  render: props => {\n    if (!auth.isAuthenticated) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Component, {\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 16\n      }, this);\n    }\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n_c = PrivateRoute;\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps)(PrivateRoute);\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Redirect","Route","connect","jsxDEV","_jsxDEV","PrivateRoute","component","Component","auth","rest","render","props","isAuthenticated","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","mapStateToProps","state","$RefreshReg$"],"sources":["C:/Users/safiu/Downloads/FullStack_Blog_App_with_React_Redux_and_Django-master/blog/frontend/src/components/common/PrivateRoute.js"],"sourcesContent":["// Manages --> Will Redirect the user back to login page if not already logged in.\n\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n// Applying Private Route check on our components\n// here component will manage our two components of App.js (Blogs and Forms) followed by auth\n// rest props (remaining properties)\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={(props) => {\n      if (!auth.isAuthenticated) {\n        return <Redirect to=\"/login\" />;\n      } else {\n        return <Component {...props} />;\n      }\n    }}\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AAClD,SAASC,OAAO,QAAQ,aAAa;;AAErC;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAEC,IAAI;EAAE,GAAGC;AAAK,CAAC,kBAC3DL,OAAA,CAACH,KAAK;EAAA,GACAQ,IAAI;EACRC,MAAM,EAAGC,KAAK,IAAK;IACjB,IAAI,CAACH,IAAI,CAACI,eAAe,EAAE;MACzB,oBAAOR,OAAA,CAACJ,QAAQ;QAACa,EAAE,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACjC,CAAC,MAAM;MACL,oBAAOb,OAAA,CAACG,SAAS;QAAA,GAAKI;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IACjC;EACF;AAAE;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACF;AAACC,EAAA,GAXIb,YAAY;AAalB,MAAMc,eAAe,GAAIC,KAAK,KAAM;EAClCZ,IAAI,EAAEY,KAAK,CAACZ;AACd,CAAC,CAAC;AAEF,eAAeN,OAAO,CAACiB,eAAe,CAAC,CAACd,YAAY,CAAC;AAAC,IAAAa,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}